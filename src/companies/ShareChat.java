package companies;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

public class ShareChat {

	public static void main(String[] args) {
		new ShareChat().combinations("uvqx");
	}
	
	
	/**
	 * 
Given a string with n characters. 
Find all the possible combination of making a sentence from it in the same order.
 A sentence is a statement generated by using 1 or more words.

	 * @param s
	 */
public void combinations(String s){
        
//        List<List<String>>res = new ArrayList<>();
//        
//        List<String>t = new ArrayList<>();
//        
//        for(int i=0;i<s.length();i++){
//            for(int j=i;j<s.length();j++){
//                String temp = s.substring(i,j+1);
//                t.add(temp);
//            }
//        }
//        
//        Map<Integer,List<String>>map = new LinkedHashMap<>();
//        
//        for(int i=0;i<t.size();i++){
//            String str = t.get(i);
//            int key = str.length();
//            str+=" ";
//            
//            if(!map.containsKey(key)){
//                map.put(key,new ArrayList<>());
//            }
//            map.get(key).add(str);
//        }
//        for(Entry<Integer,List<String>>entry: map.entrySet()) {
//        	System.out.println(entry.getValue().toString());
//        }
        
        //uvqx
        /**i=0
         * u--> s.substring(0,i, leng+1, total)
         * i=1(0,0),(1,4)  u,vqx
         *   (0,1), (2,4): uv qx 
         *   (0,2), (3,4): uvq,x
         *   (0,3),(4,4):  uvqx
         */
	Map<Integer,Set<String>>map = new LinkedHashMap<>();
	String key = "";
	List<String>result = new ArrayList<>();
	String oneLeng = "";
        for(int i=0;i<s.length();i++) {
        	oneLeng+=s.charAt(i)+" ";
        	 key = key+""+s.charAt(i);
        	 int len = key.length();
        	String tempStr = s.substring(0,len);
        	String tempStr2 = s.substring(len,s.length());
        
        	result.add(tempStr+" "+tempStr2);
        }
        result.add(oneLeng);
       System.out.println(result.toString());
    }
}
